---
- name: Reset Hetzer host
  hosts: servers
  connection: local
  vars_files:
    - secrets.yml
  roles:
    - hetzner.rescue
  tags:
    - install

- name: Install Hetzer host
  hosts: servers 
  gather_facts: true 
  vars_files:
    - secrets.yml
  roles:
    - hetzner.install
  tags:
    - install

- name: Setup k8s prerequisites
  hosts: servers
  tasks:
    - name: Setup docker
      yum:
        name: docker
        state: latest
    - name: Start and enable docker
      systemd:
        name: docker
        state: started
        enabled: true
    - name: Set sysctl net.bridge.bridge-nf-call-iptables
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1
        state: present
    - name: Set sysctl net.ipv4.ip_forward
      sysctl:
        name: net.ipv4.ip_forward
        value: 1
        state: present
  tags:
    - k8s
    - k8s-install
    - k8s-prereq
  
- name: Install Kubernetes
  hosts: servers
  vars:
    kubernetes_allow_pods_on_master: True
    kubernetes_pod_network_cidr: 10.244.0.0/16
    kubernetes_yum_arch: x86_64
    kubernetes_ignore_preflight_errors: []
    kubernetes_apiserver_advertise_address: 10.10.0.1
    kubernetes_version: '1.13'
    kubernetes_version_rhel_package: '1.13.4'
    swap_file_state: absent
  roles:
    - geerlingguy.swap
    - geerlingguy.kubernetes
  tags:
    - k8s
    - k8s-install

- name: Install Kubernetes apps
  hosts: servers
  roles:
    - andrewrothstein.kubernetes-helm
  tags:
    - k8s
    - k8s-tools

- import_playbook: configure-k8s.yml
  tags:
    - k8s
    - k8s-tools
    - k8s-webapps

# - name: Install fail2ban
#   hosts: servers
#   roles:
#     - hetzner.fail2ban
#   tags:
#     - install
#     - fail2ban

# - name: Install openvpn
#   hosts: servers
#   gather_facts: true
#   vars:
#     local_tunnelblick_path: ~/Library/Application Support/Tunnelblick/Configurations/hetzner.tblk/Contents/Resources
#   tasks:
#     - include_role:
#         name: kyl191.openvpn
#       vars:
#         openvpn_client_register_dns: false
#         clients: [macbook] 

#     - name: Create folder structure
#       local_action:
#         module: file
#         path: "{{ local_tunnelblick_path }}"
#         state: directory
#       run_once: true
#       tags:
#         - openvpn-client

#     - name: Copy client config
#       local_action:
#         module: copy
#         src: /tmp/ansible/macbook/{{ inventory_hostname }}.ovpn
#         dest: "{{ local_tunnelblick_path }}/config.ovpn"
#       run_once: true
#       tags:
#         - openvpn-client
#   tags:
#     - install
#     - openvpn